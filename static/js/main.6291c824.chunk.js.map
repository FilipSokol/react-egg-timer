{"version":3,"sources":["images/eggicon.svg","audio/beep.wav","components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","minutes","seconds","useState","timeLeft","setTimeLeft","AlertTime","Audio","beep","play","useEffect","intervalId","setInterval","clearInterval","className","src","eggicon","alt","parseInt","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAe,MAA0B,oCCA1B,MAA0B,iC,OC+D1BA,EA3DD,WACZ,IAgByBC,EAASC,EAhBlC,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAOMC,EAAY,WAChB,OAAiB,IAAbF,IALQ,IAAIG,MAAMC,GACZC,OAMD,uCAsBX,OAVAC,qBAAU,WACR,GAAKN,EAAL,CAEA,IAAMO,EAAaC,aAAY,WAC7BP,EAAYD,EAAW,KACtB,KAEH,OAAO,kBAAMS,cAAcF,OAC1B,CAACP,IAGF,sBAAKU,UAAU,QAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKC,IAAKC,EAASC,IAAI,YACvB,cAACX,EAAD,OAEF,qBAAKQ,UAAU,sBAAf,UAtBqBb,EAsBiCG,EArBxDH,EAAUiB,SAASd,EAAW,GAAI,IAClCF,EAAUgB,SAASd,EAAW,GAAI,IAC5B,GAAN,OAAUH,EAAV,YAAqBC,EAAU,GAAK,IAAM,IAA1C,OAA+CA,MAoB7C,uBACA,sBAAKY,UAAU,gBAAf,UACE,gCACE,0CACA,wBAAQK,QAAS,kBAAMd,EAAY,MAAnC,4BAEF,gCACE,0CACA,wBAAQc,QAAS,kBAAMd,EAAY,MAAnC,mCAEF,gCACE,0CACA,wBAAQc,QAAS,kBAAMd,EAAY,MAAnC,mC,MCrCKe,MAff,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,iCACE,6CAEF,qBAAKA,UAAU,kBAAf,SACE,cAAC,EAAD,YCAKO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.6291c824.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/eggicon.9c9c8fd9.svg\";","export default __webpack_public_path__ + \"static/media/beep.d998d7a7.wav\";","import React, { useState, useEffect } from \"react\";\nimport eggicon from \"../images/eggicon.svg\";\nimport beep from \"../audio/beep.wav\";\n\nconst Timer = () => {\n  const [timeLeft, setTimeLeft] = useState(\"\");\n\n  const playBeep = (beepsound) => {\n    beepsound = new Audio(beep);\n    beepsound.play();\n  };\n\n  const AlertTime = () => {\n    if (timeLeft === 0) {\n      playBeep();\n      return <p>Done</p>;\n    } else {\n      return true;\n    }\n  };\n\n  const displayTimeLeft = (minutes, seconds) => {\n    minutes = parseInt(timeLeft / 60, 10);\n    seconds = parseInt(timeLeft % 60, 10);\n    return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\n  };\n\n  useEffect(() => {\n    if (!timeLeft) return;\n\n    const intervalId = setInterval(() => {\n      setTimeLeft(timeLeft - 1);\n    }, 1000);\n\n    return () => clearInterval(intervalId);\n  }, [timeLeft]);\n\n  return (\n    <div className=\"timer\">\n      <div className=\"eggicon-section\">\n        <img src={eggicon} alt=\"eggicon\" />\n        <AlertTime />\n      </div>\n      <div className=\"displaytime-section\">{displayTimeLeft(timeLeft)}</div>\n      <hr />\n      <div className=\"items-section\">\n        <div>\n          <p>4 minutes</p>\n          <button onClick={() => setTimeLeft(240)}>soft boiled</button>\n        </div>\n        <div>\n          <p>7 minutes</p>\n          <button onClick={() => setTimeLeft(420)}>creamy hard boiled</button>\n        </div>\n        <div>\n          <p>9 minutes</p>\n          <button onClick={() => setTimeLeft(540)}>hard boiled</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","import React from \"react\";\nimport Timer from \"./components/Timer\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <header>\n          <h1>Egg Timer</h1>\n        </header>\n        <div className=\"timer-container\">\n          <Timer />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}